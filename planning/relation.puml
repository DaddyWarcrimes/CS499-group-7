@startuml

title Trucking Company Management System

account -- employee
vehicle --* maintenance
maintenance --*partsList
partsList -- part
employee --* shipmentIn
employee --* shipmentOut
shipmentIn -- purchaseOrder
shipmentOut -- purchaseOrder
shipmentOut -- manifest
purchaseOrder --* orderItem
manifest --* manifestItem
manifestItem -- product
orderItem -- product
client --* shipmentIn
client --* shipmentOut
shipmentIn -- vehicle
shipmentOut -- vehicle
employee -- payrollReport
maintenance -- maintenanceReportAggragate
maintenance -- vehMaintenanceReport
vehMaintenanceReport --* partsList

class shipmentIn << (R,#FF0202) >>{
  +shipID
  +clientID
  +vehID
  +departure - date/time
  +estArrival - date/time
  +arrived - bool
  +payment - bool
  +driver
  +purchaseOrder
}
class shipmentOut<< (R,#FF0202) >>{
  +shipID
  +clientID
  +vehID
  +departure - date/time
  +estArrival - date/time
  +arrived - bool
  +payment - bool
  +driver
  +manifest
  +purchaseOrder
}
class client<< (R,#FF0202) >>{
  +clientID
  +clientName
  +address
  +city
  +state
  +zip
}
class manifest<< (R,#FF0202) >>{
  +manifestID
  +costShippingHandling
}
class purchaseOrder<< (R,#FF0202) >>{
  +purchaseOrderID
  +costShippingHandling
}
class manifestItem<< (R,#FF0202) >>{
  +manifestID
  +productID
  +quantity
}
class orderItem<< (R,#FF0202) >>{
  +purchaseOrderID
  +productID
  +quantity
  +status - OnHand/Backorder/Unavailable
}
class product<< (R,#FF0202) >>{
  +productID
  +price
  +productName
}

class account << (R,#FF0202) >> {
  +employeeID
  +accountType
  }
class employee << (R,#FF0202) >> {
  +employeeID
  +fName
  +mName
  +lName
  +street
  +city
  +state
  +zip
  +homePhone
  +cellPhone
  +pay
  +startDate - date
  +username
}

class vehicle << (R,#FF0202) >> {
  +vehID
  +make
  +model
  +year
  +vehType
  +loadCapacity
  +height
  +partsList
  }
class maintenance << (R,#FF0202) >> {
  +maintID
  +vehID
  +description
  +partsList
  +dateComplete
}
class partsList << (R,#FF0202) >> {
  +listID
  +partID
  +source
  +cost
}
class part<< (R,#FF0202) >>{
  +partID
  +onHand
  +partName
}

interface payrollReport << (V,CD90FF) >>{
 +employee.employeeID
 +name(employee.lName,employee.fName)
 +employee.startDate
 +employee.pay
 }
 
interface maintenanceReportAggragate << (V,CD90FF) >>{
 +maintenance.vehID
 +maintenance.description
 +cost - Sum of parts list costs
 }
 
interface vehMaintenanceReport << (V,CD90FF) >>{
+maintenance.vehID
+maintenance.maintID
+maintenance.description
}

interface inboundReport << (V,CD90FF) >>{
 +shipID
 +cost
 +paid - bool
 }
inboundReport -- shipmentIn

interface outboundReport << (V,CD90FF) >>{
 +shipID
 +cost
 +paid
 }
 outboundReport -- shipmentOut

@enduml
